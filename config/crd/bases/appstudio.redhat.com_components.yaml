
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: components.appstudio.redhat.com
spec:
  group: appstudio.redhat.com
  names:
    kind: Component
    listKind: ComponentList
    plural: components
    shortNames:
    - hascmp
    - hc
    - comp
    singular: component
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Component is the Schema for the components API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ComponentSpec defines the desired state of Component
            properties:
              application:
                description: Application to add the component to
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
              componentName:
                description: ComponentName is name of the component to be added to
                  the HASApplication
                maxLength: 63
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
              containerImage:
                description: The container image to build or create the component
                  from
                type: string
              env:
                description: An array of environment variables to add to the component
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: 'Variable references $(VAR_NAME) are expanded using
                        the previously defined environment variables in the container
                        and any service environment variables. If a variable cannot
                        be resolved, the reference in the input string will be unchanged.
                        Double $$ are reduced to a single $, which allows for escaping
                        the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the
                        string literal "$(VAR_NAME)". Escaped references will never
                        be expanded, regardless of whether the variable exists or
                        not. Defaults to "".'
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name,
                            metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP,
                            status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only
                            resources limits and requests (limits.cpu, limits.memory,
                            limits.ephemeral-storage, requests.cpu, requests.memory
                            and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  required:
                  - name
                  type: object
                type: array
              replicas:
                description: The number of replicas to deploy the component with
                type: integer
              resources:
                description: Compute Resources required by this component
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              route:
                description: The route to expose the component with
                type: string
              secret:
                description: 'Secret describes the name of a Kubernetes secret containing
                  either: 1. A Personal Access Token to access the Component''s git
                  repostiory (if using a Git-source component) or 2. An Image Pull
                  Secret to access the Component''s container image (if using an Image-source
                  component).'
                type: string
              skipGitOpsResourceGeneration:
                description: Whether to bypass the generation of GitOps resources
                  for the Component. Defaults to false.
                type: boolean
              source:
                description: Source describes the Component source
                properties:
                  git:
                    description: Git Source for a Component
                    properties:
                      context:
                        description: A relative path inside the git repo containing
                          the component
                        type: string
                      devfileUrl:
                        description: If specified, the devfile at the URL will be
                          used for the component.
                        type: string
                      dockerfileUrl:
                        description: If specified, the dockerfile at the URL will
                          be used for the component.
                        type: string
                      revision:
                        description: Specify a branch/tag/commit id. If not specified,
                          default is `main`/`master`.
                        type: string
                      url:
                        description: If importing from git, the repository to create
                          the component from
                        type: string
                    required:
                    - url
                    type: object
                type: object
              targetPort:
                description: The port to expose the component over
                type: integer
            required:
            - application
            - componentName
            type: object
          status:
            description: ComponentStatus contains the observed state of Component
            properties:
              gitopsRepository:
                description: GitOpsRepository contains the Git URL, path, branch,
                  and most recent commit id for the component
                properties:
                  branch:
                    description: Branch is the branch to use when accessing the GitOps
                      repository
                    type: string
                  commitID:
                    description: CommitID contains the most recent commit ID for which
                      the Kubernetes resources of the Component were modified.
                    type: string
                  generatedResources:
                    description: GeneratedResources contains the list of GitOps repository
                      resources generated by the application service controller in
                      the overlays/<environment> dir, for example, 'deployment-patch.yaml'.
                      This is stored to differentiate between application-service
                      controller generated resources vs resources added by a user
                    items:
                      type: string
                    type: array
                  path:
                    description: 'Path is a pointer to a folder in the GitOps repo,
                      containing a kustomization.yaml NOTE: Each component-env combination
                      must have it''s own separate path'
                    type: string
                  url:
                    description: URL is the Git repository URL e.g. The Git repository
                      that contains the K8s resources to deployment for the component
                      of the application.
                    type: string
                required:
                - branch
                - commitID
                - generatedResources
                - path
                - url
                type: object
              name:
                description: Name is the name of the component.
                type: string
            required:
            - gitopsRepository
            - name
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
